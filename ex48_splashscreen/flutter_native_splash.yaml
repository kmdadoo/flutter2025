flutter_native_splash:
  # flutter_native_splash를 사용하려면, 먼저 pubspec.yaml에 이 패키지를 추가하고 
  # 아래와 같은 설정을 한 다음, 터미널에서 
  # flutter pub run flutter_native_splash:create 명령어를 실행하면 됩니다.
  # flutter pub run flutter_native_splash:create

  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  # background_image와 color는 동시에 사용할 수 없고, 둘 중 하나만 선택해야 합니다.
  # 스플래시 스크린의 배경색을 단색으로 지정  
  # color: "#42a5f5"
  # 스플래시 스크린의 배경으로 사용할 이미지를 지정합니다. 주로 그라데이션 같은 효과를 낼 때 유용합니다.
  background_image: "assets/images/intro.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # 배경 이미지와 별개로, 스플래시 스크린의 중앙에 표시될 이미지를 지정합니다. 
  # 예를 들어, 앱 로고를 여기에 배치할 수 있습니다.
  #image: assets/splash.png

  # branding: 스플래시 스크린의 하단에 표시될 브랜드 이미지를 지정합니다. 
  # 보통 회사 로고나 상표를 여기에 넣습니다. branding_mode를 사용하여 위치를 
  # 세밀하게 조정할 수 있습니다.
  #branding: assets/dart.png
  #branding_mode: bottom
  # 하단 브랜드 이미지의 아래쪽 패딩(간격)을 조절합니다.
  # branding_bottom_padding: 24

  # 다크 모드일 때 적용될 스플래시 스크린의 설정을 지정합니다. 
  # 만약 이 설정을 하지 않으면, 기본 모드 설정이 그대로 적용됩니다.
  #color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png
  #branding_dark: assets/dart_dark.png

  # Android 12 이상 버전에서는 스플래시 스크린을 처리하는 방식이 달라져서 별도의 설정이 필요합니다.
  android_12:
    # Android 12용 앱 아이콘 이미지를 지정합니다. 이 이미지는 화면 중앙에서 원형으로 
    # 잘려서 표시되므로, 디자인 가이드라인(960x960 픽셀 권장)을 따르는 것이 좋습니다.
    image: assets/images/intro.png
   
    # Android 12 스플래시 화면의 배경색을 지정
    #color: "#42a5f5"

    # 아이콘 뒤에 표시될 배경색을 지정
    #icon_background_color: "#111111"
 
    #branding: assets/dart.png

    #image_dark: assets/android12splash-invert.png
    #color_dark: "#042a49"
    #icon_background_color_dark: "#eeeeee"

  # 특정 플랫폼에서 스플래시 스크린 생성을 비활성화할 수 있습니다.
  #android: false
  #ios: false
  #web: false

  # 플랫폼별로 개별적인 설정을 지정하여 기본 설정을 덮어쓸 수 있습니다.
  #color_android: "#42a5f5"
  #color_dark_android: "#042a49"
  #color_ios: "#42a5f5"
  #color_dark_ios: "#042a49"
  #color_web: "#42a5f5"
  #color_dark_web: "#042a49"
  #image_android: assets/splash-android.png
  #image_dark_android: assets/splash-invert-android.png
  #image_ios: assets/splash-ios.png
  #image_dark_ios: assets/splash-invert-ios.png
  #image_web: assets/splash-web.gif
  #image_dark_web: assets/splash-invert-web.gif
  #background_image_android: "assets/background-android.png"
  #background_image_dark_android: "assets/dark-background-android.png"
  #background_image_ios: "assets/background-ios.png"
  #background_image_dark_ios: "assets/dark-background-ios.png"
  #background_image_web: "assets/background-web.png"
  #background_image_dark_web: "assets/dark-background-web.png"
  #branding_android: assets/brand-android.png
  #branding_bottom_padding_android: 24
  #branding_dark_android: assets/dart_dark-android.png
  #branding_ios: assets/brand-ios.png
  #branding_bottom_padding_ios: 24
  #branding_dark_ios: assets/dart_dark-ios.png
  #branding_web: assets/brand-web.gif
  #branding_dark_web: assets/dart_dark-web.gif

  # For example:
  # `android_gravity: fill|clip_vertical` - This will fill the width while maintaining the image's vertical aspect ratio
  
  ##  Android의 이미지 정렬 방식을 지정합니다. 
  # center나 fill 같은 값을 사용할 수 있고, | 연산자로 조합하여 여러 효과를 줄 수 있습니다.
  #android_gravity: center
  #
  #  iOS의 이미지 정렬 방식을 지정 (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode)
  #ios_content_mode: center
  #
  # 웹에서의 이미지 정렬 방식을 지정
  #web_image_mode: center

  # 안드로이드 화면 방향을 설정
  # https://developer.android.com/guide/topics/manifest/activity-element#screen
  #android_screen_orientation: sensorLandscape

  # 스플래시 화면이 표시되는 동안 상태 바(알림 바)를 숨길지 여부를 결정합니다.
  #fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'